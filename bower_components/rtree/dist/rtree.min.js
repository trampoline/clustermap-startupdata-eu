/****************************************************************************** 
			rtree.js -Non-Recursive Javascript R-Tree Library
			Version 1.2.3 2013-11-29

			https://github.com/leaflet-extras/RTree.
			******************************************************************************/
!function(a){"object"==typeof exports?module.exports=a():"function"==typeof define&&define.amd?define(a):"undefined"!=typeof window?window.RTree=a():"undefined"!=typeof global?global.RTree=a():"undefined"!=typeof self&&(self.RTree=a())}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);throw new Error("Cannot find module '"+g+"'")}var j=c[g]={exports:{}};b[g][0].call(j.exports,function(a){var c=b[g][1][a];return e(c?c:a)},j,j.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";var d=a("./rectangle"),e=function(a,b){if(b&&b.bbox)return{leaf:b,x:b.bbox[0],y:b.bbox[1],w:b.bbox[2]-b.bbox[0],h:b.bbox[3]-b.bbox[1]};for(var c=a.length,d=0,e=new Array(c);c>d;)e[d]=[a[d][0],a[d][1]],d++;var f=e[0];c=e.length,d=1;for(var g={min:[].concat(f),max:[].concat(f)};c>d;)e[d][0]<g.min[0]?g.min[0]=e[d][0]:e[d][0]>g.max[0]&&(g.max[0]=e[d][0]),e[d][1]<g.min[1]?g.min[1]=e[d][1]:e[d][1]>g.max[1]&&(g.max[1]=e[d][1]),d++;var h={x:g.min[0],y:g.min[1],w:g.max[0]-g.min[0],h:g.max[1]-g.min[1]};return b&&(h.leaf=b),h},f={};f.point=function(a,b){return b.insertSubtree({x:a.geometry.coordinates[0],y:a.geometry.coordinates[1],w:0,h:0,leaf:a},b.root)},f.multiPointLineString=function(a,b){return b.insertSubtree(e(a.geometry.coordinates,a),b.root)},f.multiLineStringPolygon=function(a,b){return b.insertSubtree(e(Array.prototype.concat.apply([],a.geometry.coordinates),a),b.root)},f.multiPolygon=function(a,b){return b.insertSubtree(e(Array.prototype.concat.apply([],Array.prototype.concat.apply([],a.geometry.coordinates)),a),b.root)},f.makeRec=function(a){return d(a.x,a.y,a.w,a.h)},f.geometryCollection=function(a,b){if(a.bbox)return b.insertSubtree({leaf:a,x:a.bbox[0],y:a.bbox[1],w:a.bbox[2]-a.bbox[0],h:a.bbox[3]-a.bbox[1]},b.root);for(var c,d=a.geometry.geometries,g=0,h=d.length,i=[];h>g;){switch(c=d[g],c.type){case"Point":i.push(f.makeRec({x:c.coordinates[0],y:c.coordinates[1],w:0,h:0}));break;case"MultiPoint":i.push(f.makeRec(e(c.coordinates)));break;case"LineString":i.push(f.makeRec(e(c.coordinates)));break;case"MultiLineString":i.push(f.makeRec(e(Array.prototype.concat.apply([],c.coordinates))));break;case"Polygon":i.push(f.makeRec(e(Array.prototype.concat.apply([],c.coordinates))));break;case"MultiPolygon":i.push(f.makeRec(e(Array.prototype.concat.apply([],Array.prototype.concat.apply([],c.coordinates)))));break;case"GeometryCollection":d=d.concat(c.geometries),h=d.length}g++}var j=i[0];for(g=1,h=i.length;h>g;)j.expand(i[g]),g++;return b.insertSubtree({leaf:a,x:j.x(),y:j.y(),h:j.h(),w:j.w()},b.root)},c.geoJSON=function(a){var b,c,d=this;if(Array.isArray(a))b=a.slice();else if(a.features&&Array.isArray(a.features))b=a.features.slice();else{if(!(a instanceof Object))throw"this isn't what we're looking for";b=[a]}for(var e=b.length,g=0;e>g;){if(c=b[g],"Feature"===c.type)switch(c.geometry.type){case"Point":f.point(c,d);break;case"MultiPoint":f.multiPointLineString(c,d);break;case"LineString":f.multiPointLineString(c,d);break;case"MultiLineString":f.multiLineStringPolygon(c,d);break;case"Polygon":f.multiLineStringPolygon(c,d);break;case"MultiPolygon":f.multiPolygon(c,d);break;case"GeometryCollection":f.geometryCollection(c,d)}g++}},c.bbox=function(){var a,b,c,d;switch(arguments.length){case 1:a=arguments[0][0][0],b=arguments[0][0][1],c=arguments[0][1][0],d=arguments[0][1][1];break;case 2:a=arguments[0][0],b=arguments[0][1],c=arguments[1][0],d=arguments[1][1];break;case 4:a=arguments[0],b=arguments[1],c=arguments[2],d=arguments[3]}return this.search({x:a,y:b,w:c-a,h:d-b})}},{"./rectangle":3}],2:[function(a,b){"use strict";var c=a("./rtree"),d=a("./geojson");c.prototype.bbox=d.bbox,c.prototype.geoJSON=d.geoJSON,c.Rectangle=a("./rectangle"),b.exports=c},{"./geojson":1,"./rectangle":3,"./rtree":4}],3:[function(a,b){"use strict";function c(a,b,d,e){if(!(this instanceof c))return new c(a,b,d,e);var f,g,h;a.x?(d=a.w,e=a.h,b=a.y,0!==a.w&&!a.w&&a.x2?(d=a.x2-a.x,e=a.y2-a.y):(d=a.w,e=a.h),a=a.x,f=a+d,g=b+e,h=e+d?!1:!0):(f=a+d,g=b+e,h=e+d?!1:!0),this.x1=this.x=function(){return a},this.y1=this.y=function(){return b},this.x2=function(){return f},this.y2=function(){return g},this.w=function(){return d},this.h=function(){return e},this.p=function(){return h},this.overlap=function(c){return h||c.p()?a<=c.x2()&&f>=c.x()&&b<=c.y2()&&g>=c.y():a<c.x2()&&f>c.x()&&b<c.y2()&&g>c.y()},this.expand=function(c){var h,i,j=c.x(),k=c.y(),l=c.x2(),m=c.y2();return h=a>j?j:a,i=b>k?k:b,d=f>l?f-h:l-h,e=g>m?g-i:m-i,a=h,b=i,this}}c.overlapRectangle=function(a,b){return 0===a.h&&0===a.w||0===b.h&&0===b.w?a.x<=b.x+b.w&&a.x+a.w>=b.x&&a.y<=b.y+b.h&&a.y+a.h>=b.y:a.x<b.x+b.w&&a.x+a.w>b.x&&a.y<b.y+b.h&&a.y+a.h>b.y},c.containsRectangle=function(a,b){return a.x+a.w<=b.x+b.w&&a.x>=b.x&&a.y+a.h<=b.y+b.h&&a.y>=b.y},c.expandRectangle=function(a,b){var c,d,e=a.x+a.w,f=b.x+b.w,g=a.y+a.h,h=b.y+b.h;return c=a.x>b.x?b.x:a.x,d=a.y>b.y?b.y:a.y,a.w=e>f?e-c:f-c,a.h=g>h?g-d:h-d,a.x=c,a.y=d,a},c.makeMBR=function(a,b){if(!a.length)return{x:0,y:0,w:0,h:0};b=b||{},b.x=a[0].x,b.y=a[0].y,b.w=a[0].w,b.h=a[0].h;for(var d=1,e=a.length;e>d;d++)c.expandRectangle(b,a[d]);return b},c.squarifiedRatio=function(a,b,c){var d=(a+b)/2,e=a*b,f=e/(d*d);return e*c/f},b.exports=c},{}],4:[function(a,b){"use strict";function c(a){if(!(this instanceof c))return new c(a);var b=3,e=6;isNaN(a)||(b=Math.floor(a/2),e=a);var f={x:0,y:0,w:0,h:0,id:"root",nodes:[]};this.root=f;var g=function(a){for(var b,c=a.slice(),d=[];c.length;)b=c.pop(),b.nodes?c=c.concat(b.nodes):b.leaf&&d.push(b);return d},h=function(a,c,e){var f,h,i,j=[],k=[],l=[],m=1;if(!a||!d.overlapRectangle(a,e))return l;var p={x:a.x,y:a.y,w:a.w,h:a.h,target:c};for(k.push(e.nodes.length),j.push(e);j.length>0;){if(f=j.pop(),h=k.pop()-1,"target"in p)for(;h>=0;){if(i=f.nodes[h],d.overlapRectangle(p,i)){if(p.target&&"leaf"in i&&i.leaf===p.target||!p.target&&("leaf"in i||d.containsRectangle(i,p))){l="nodes"in i?g(f.nodes.splice(h,1)):f.nodes.splice(h,1),d.makeMBR(f.nodes,f),delete p.target;break}"nodes"in i&&(m++,k.push(h),j.push(f),f=i,h=i.nodes.length)}h--}else if("nodes"in p){f.nodes.splice(h+1,1),f.nodes.length>0&&d.makeMBR(f.nodes,f);for(var q=0;q<p.nodes.length;q++)o(p.nodes[q],f);p.nodes=[],0===j.length&&f.nodes.length<=1?(p.nodes=n(f,!0,p.nodes,f),f.nodes=[],j.push(f),k.push(1)):j.length>0&&f.nodes.length<b?(p.nodes=n(f,!0,p.nodes,f),f.nodes=[]):delete p.nodes}else d.makeMBR(f.nodes,f);m-=1}return l},i=function(a,b){var c,e=-1,f=[],g=!0;f.push(b);for(var h=b.nodes;g||-1!==e;){g?g=!1:(f.push(h[e]),h=h[e].nodes,e=-1);for(var i=h.length-1;i>=0;i--){var j=h[i];if("leaf"in j){e=-1;break}var k=d.squarifiedRatio(j.w,j.h,j.nodes.length+1),l=Math.max(j.x+j.w,a.x+a.w)-Math.min(j.x,a.x),m=Math.max(j.y+j.h,a.y+a.h)-Math.min(j.y,a.y),n=d.squarifiedRatio(l,m,j.nodes.length+2);(0>e||Math.abs(n-k)<c)&&(c=Math.abs(n-k),e=i)}}return f},j=function(a){for(var b=l(a);a.length>0;)k(a,b[0],b[1]);return b},k=function(a,c,e){for(var f,g,h,i=d.squarifiedRatio(c.w,c.h,c.nodes.length+1),j=d.squarifiedRatio(e.w,e.h,e.nodes.length+1),k=a.length-1;k>=0;k--){var l=a[k],m={};m.x=Math.min(c.x,l.x),m.y=Math.min(c.y,l.y),m.w=Math.max(c.x+c.w,l.x+l.w)-m.x,m.h=Math.max(c.y+c.h,l.y+l.h)-m.y;var n=Math.abs(d.squarifiedRatio(m.w,m.h,c.nodes.length+2)-i),o={};o.x=Math.min(e.x,l.x),o.y=Math.min(e.y,l.y),o.w=Math.max(e.x+e.w,l.x+l.w)-o.x,o.h=Math.max(e.y+e.h,l.y+l.h)-o.y;var p=Math.abs(d.squarifiedRatio(o.w,o.h,e.nodes.length+2)-j);(!g||!f||Math.abs(p-n)<f)&&(g=k,f=Math.abs(p-n),h=n>p?e:c)}var q=a.splice(g,1)[0];c.nodes.length+a.length+1<=b?(c.nodes.push(q),d.expandRectangle(c,q)):e.nodes.length+a.length+1<=b?(e.nodes.push(q),d.expandRectangle(e,q)):(h.nodes.push(q),d.expandRectangle(h,q))},l=function(a){for(var b,c,d=a.length-1,e=0,f=a.length-1,g=0,h=a.length-2;h>=0;h--){var i=a[h];i.x>a[e].x?e=h:i.x+i.w<a[d].x+a[d].w&&(d=h),i.y>a[g].y?g=h:i.y+i.h<a[f].y+a[f].h&&(f=h)}var j=Math.abs(a[d].x+a[d].w-a[e].x),k=Math.abs(a[f].y+a[f].h-a[g].y);return j>k?d>e?(b=a.splice(d,1)[0],c=a.splice(e,1)[0]):(c=a.splice(e,1)[0],b=a.splice(d,1)[0]):f>g?(b=a.splice(f,1)[0],c=a.splice(g,1)[0]):(c=a.splice(g,1)[0],b=a.splice(f,1)[0]),[{x:b.x,y:b.y,w:b.w,h:b.h,nodes:[b]},{x:c.x,y:c.y,w:c.w,h:c.h,nodes:[c]}]},m=function(a,b){return a.nodes=b.nodes,a.x=b.x,a.y=b.y,a.w=b.w,a.h=b.h,a},n=function(a,b,c,e){var f=[];if(!d.overlapRectangle(a,e))return c;for(f.push(e.nodes);f.length>0;)for(var g=f.pop(),h=g.length-1;h>=0;h--){var i=g[h];d.overlapRectangle(a,i)&&("nodes"in i?f.push(i.nodes):"leaf"in i&&(b?c.push(i):c.push(i.leaf)))}return c},o=function(a,b){var c;if(0===b.nodes.length)return b.x=a.x,b.y=a.y,b.w=a.w,b.h=a.h,b.nodes.push(a),void 0;for(var f,g=i(a,b),h=a;g.length>0;){if(c&&"nodes"in c&&0===c.nodes.length){f=c,c=g.pop();for(var k=0;k<c.nodes.length;k++)if(c.nodes[k]===f||0===c.nodes[k].nodes.length){c.nodes.splice(k,1);break}}else c=g.pop();if("leaf"in h||"nodes"in h||Array.isArray(h)){if(Array.isArray(h)){for(var l=0;l<h.length;l++)d.expandRectangle(c,h[l]);c.nodes=c.nodes.concat(h)}else d.expandRectangle(c,h),c.nodes.push(h);if(c.nodes.length<=e)h={x:c.x,y:c.y,w:c.w,h:c.h};else{var m=j(c.nodes);h=m,g.length<1&&(c.nodes.push(m[0]),g.push(c),h=m[1])}}else d.expandRectangle(c,h),h={x:c.x,y:c.y,w:c.w,h:c.h}}};this.insertSubtree=o,this.getTree=function(){return f},this.setTree=function(a,b){return b||(b=f),m(b,a)},this.search=function(a,b,c){return c=c||[],n(a,b,c,f)};var p=function(a){for(var b,c=1,d=[];c>0;)b=h(a,!1,f),c=b.length,d=d.concat(b);return d},q=function(a,b){var c=h(a,b,f);return c};this.remove=function(a,b){return b&&"function"!=typeof b?q(a,b):p(a,b)},this.insert=function(a,b){var c=o({x:a.x,y:a.y,w:a.w,h:a.h,leaf:b},f);return c}}var d=a("./rectangle");c.prototype.toJSON=function(a){return JSON.stringify(this.root,!1,a)},c.fromJSON=function(a){var b=new c;return b.setTree(JSON.parse(a)),b},b.exports=c,"function"!=typeof Array.isArray&&(Array.isArray=function(a){return"object"==typeof a&&"[object Array]"==={}.toString.call(a)})},{"./rectangle":3}]},{},[2])(2)});